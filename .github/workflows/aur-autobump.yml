name: aur-autobump

on:
  schedule: [cron: "12 1 * * *"]
  workflow_dispatch:

jobs:
  bump:
    runs-on: ubuntu-latest
    container: archlinux:latest
    strategy:
      matrix:
        pkg: [fdbcli-bin, fdbbackup-bin, fdbserver-bin, fdbmonitor-bin]
    steps:
      - name: Install dependencies
        run: |
          pacman -Sy --noconfirm --needed git jq nvchecker devtools

      - name: Get AUR SSH Public Keys
        run: |
          install -dm 700 $HOME/.ssh
          ssh-keyscan aur.archlinux.org >>$HOME/.ssh/known_hosts

      - name: Write SSH Private Key
        env:
          AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}
        run: |
          echo -e "${AUR_SSH_KEY//_/\\n}" >$HOME/.ssh/id_rsa
          chmod 600 $HOME/.ssh/id_rsa

      - name: Set up Git
        run: |
          git config --global user.name "${{ secrets.AUR_USERNAME }}"
          git config --global user.email "${{ secrets.AUR_EMAIL }}"

      - name: Clone AUR package repository
        run: |
          git clone "ssh://aur@aur.archlinux.org/${{ matrix.pkg }}.git" aur

      - name: Check version
        id: version-check
        run: |
          cd aur
          pkgctl version check --json > result.json
          echo "out_of_date=$(jq -r '.[0].out_of_date' result.json)" >> $GITHUB_OUTPUT
          echo "upstream_version=$(jq -r '.[0].upstream_version' result.json)" >> $GITHUB_OUTPUT

      - name: Bump version
        if: steps.version-check.outputs.out_of_date == 'true'
        run: |
          cd aur
          pkgctl version upgrade
          makepkg --printsrcinfo > .SRCINFO

      - name: Commit changes
        if: steps.version-check.outputs.out_of_date == 'true'
        run: |
          git add PKGBUILD .SRCINFO
          git commit -m "auto: bump to ${{ steps.version-check.outputs.upstream_version }}"
          git push
